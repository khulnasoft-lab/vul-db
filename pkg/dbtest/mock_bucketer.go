// Code generated by mockery v1.0.0. DO NOT EDIT.

package dbtest

import (
	mock "github.com/stretchr/testify/mock"
	bbolt "go.etcd.io/bbolt"
)

// mockBucketer is an autogenerated mock type for the bucketer type
type mockBucketer struct {
	mock.Mock
}

type bucketerBucketArgs struct {
	Name         []byte
	NameAnything bool
}

type bucketerBucketReturns struct {
	_a0 *bbolt.Bucket
}

type bucketerBucketExpectation struct {
	Args    bucketerBucketArgs
	Returns bucketerBucketReturns
}

func (_m *mockBucketer) ApplyBucketExpectation(e bucketerBucketExpectation) {
	var args []interface{}
	if e.Args.NameAnything {
		args = append(args, mock.Anything)
	} else {
		args = append(args, e.Args.Name)
	}
	_m.On("Bucket", args...).Return(e.Returns._a0)
}

func (_m *mockBucketer) ApplyBucketExpectations(expectations []bucketerBucketExpectation) {
	for _, e := range expectations {
		_m.ApplyBucketExpectation(e)
	}
}

// Bucket provides a mock function with given fields: name
func (_m *mockBucketer) Bucket(name []byte) *bbolt.Bucket {
	ret := _m.Called(name)

	var r0 *bbolt.Bucket
	if rf, ok := ret.Get(0).(func([]byte) *bbolt.Bucket); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*bbolt.Bucket)
		}
	}

	return r0
}
